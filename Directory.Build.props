<Project>

  <Import Project="../Directory.Build.props" Condition="'$(SolutionName)' == 'build_all_packages'" />

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>zlib.managed</AssemblyName>
    <PackageTags>zlib</PackageTags>
    <RepositoryUrl>https://github.com/Elskom/zlib.managed/</RepositoryUrl>
    <PackageProjectUrl>https://github.com/Elskom/zlib.managed/</PackageProjectUrl>
    <PackageLicenseExpression Condition="'$(SolutionName)' == 'build_all_packages'"></PackageLicenseExpression>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <Description>A cleaned up and bug fixed version of zlib.net. This is also planned to be updated frequently if needed too.</Description>
    <RootNamespace>Elskom.Generic.Libs</RootNamespace>
    <PackageReleaseNotes>Changes:
      - Reduced TFM's on the package from 19 to 1.
      - Embed the pdb inside of the binaries.
      - Inflate, Deflate, ZlibCompressionState, ZlibCompressionStrategy, and ZlibFlushStrategy are now internal.
      - Added ZlibVersion() and ZlibGetAdler32() to the MemoryZlib class.
      - Removed deprecated methods inside of the MemoryZlib class.
      - Removed the ZlibConst, ZStream and the SupportClass classes as they became useless.
      - ZStreamException has been removed entirely, NotPackableException and NotUnpackableException makes it more clear if error happened during compressing or decompressing anyway.
      - use simplified using statements instead of blocks in MemoryZlib since all the methods do is use the streams to do compression/decompression.
      - Removed unused internal/private methods as well too (dead code).
      - Removed ZImputStream and ZOutputStream and replacted it with ZlibStream.
      - Added Compression levels 2 ~ 8 to ZlibCompression.
      - Replaced output parameters on methods inside of the MemoryZlib class to return values.
      - Renamed Compress methods that return an Adler32 hash to CompressHash.
      - Removed parameterless constructor on NotPackableException and NotUnpackableException.</PackageReleaseNotes>
    <Version>2.0.0</Version>
    <NoWarn>$(NoWarn);NU5104;NU5118</NoWarn>
    <DelaySign>false</DelaySign>
    <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <!-- <IncludeSymbols>true</IncludeSymbols> -->
    <!-- <IncludeBuildOutput>true</IncludeBuildOutput> -->
    <!-- <SymbolPackageFormat>snupkg</SymbolPackageFormat> -->
    <GitBuildInfoAssemblyType>MemoryZlib</GitBuildInfoAssemblyType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(SolutionName)' != 'build_all_packages'">
    <!-- suppress message when using the .NET Preview SDKs. -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <LangVersion>latest</LangVersion>
    <Company>Els_kom org.</Company>
    <Authors>Els_kom org.</Authors>
    <Copyright>Copyright (c) 2018-2021</Copyright>
    <RepositoryType>git</RepositoryType>
    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts\</PackageOutputPath>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Elskom.snk</AssemblyOriginatorKeyFile>
    <DebugType>embedded</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <!--
        Sorry, we have to disable the warning for adding the reference assemblies to the package without adding them to the nuspec.
        This is because of the fact that if we use the methods to add them that does add them to the nuspec, then the folder paths
        would be added automatically to the project which is not intended at all or even wanted. As such for now the only way to
        fix that is to disable package analysis for now.
    -->
    <NoPackageAnalysis Condition="'$(PublishReferenceAssemblies)' == 'true'">true</NoPackageAnalysis>
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>preview</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <ProduceReferenceAssemblyInOutDir>true</ProduceReferenceAssemblyInOutDir>
  </PropertyGroup>

</Project>
